set nocompatible
set nobackup
set clipboard=unnamed
set tabstop=4
set shiftwidth=4
set expandtab
set winminheight=0
set undolevels=1000
set background=dark
set history=700
set autoread
set autoindent
set cmdheight=2
set smartcase
set showmatch
set hlsearch
set incsearch
set smartindent
syntax enable
set nobackup
set nowb
set noswapfile
set relativenumber
set ru
set nu
set vb
set t_vb=
set switchbuf=useopen
set textwidth=80
let mapleader = ","
set timeout timeoutlen=1000
nnoremap * *``
set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar
"Navigate quick fix windwo
"
"Ignore these
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*.o,*/obj
nnoremap <Leader>rep,: s/,/ /g
nnoremap <Leader>repb: s/q/\\b/g
nnoremap <Leader>e : cp<CR>
nnoremap <Leader>d : cn<CR>
nnoremap <Leader>t :TagbarToggle<CR>
nnoremap <Leader>c q:
nnoremap <Leader>sd :!svn_diff %<CR>
"Maximize window
nnoremap <Leader>w : <esc><C-w>_
"Save file
nnoremap <Leader>s <esc>:w!<CR>
"noremap <Leader>b <esc>:ls<CR>:b
"next tab
noremap <Leader>a <esc>:tabn<CR>
"
"open the quick fix window
noremap <Leader>v <esc>:copen<CR>

"previous tab
"noremap <Leader>s <esc>:tabp<CR>
"Make current buffer the only buffe being shown
noremap <Leader>q <esc><C-W>o


" Smart way to move between windows
map <C-h> <C-W>h
map <C-l> <C-W>l
map <C-j> <C-W>j
map <C-k> <C-W>k
"return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
"Color stuff"
set t_Co=256
if has('gui_running')
  set guioptions-=T  " no toolbar
  set guifont=Monospace\ 9
  colorscheme desert
endif
colorscheme desert
set path+=**
highlight Search guibg='Yellow' guifg='NONE'

let g:DoxygenToolkit_briefTag_pre="@Description"
let g:DoxygenToolkit_paramTag_pre="@Param "
let g:DoxygenToolkit_returnTag="@Returns   "
let g:DoxygenToolkit_blockHeader="----------------------------------------------------------------------"
let g:DoxygenToolkit_blockFooter="----------------------------------------------------------------------"
let g:DoxygenToolkit_authorName="Vikas MK"
"Do tags and cscope. Do this in the top directory
"map <F2> :!ctags -R * <CR>:set tag=tags<CR>:!cscope -Rbkq<CR>:cs add cscope.out<CR>
"Only add these files to cscope
map <F2> :!find `pwd` -name "*.c" -o -name "*.h" -o -name"*.cpp" -name "*.hpp" > cscope.files<CR>:!ctags -R --languages=C,C++ --c++-kinds=+p --fields=+iaS --fields+=-l --extra=+q * <CR>:set tag=tags<CR>:!cscope -Rbq <CR>:cscope add cscope.out<CR>

"map <F5> :!find . -iname "**.[ch]"
map <F5> :!find . -iname "**"
inoremap jk <esc>
map <F12> :source ~/.vimrc<CR>
map <F11> :new ~/.vimrc<CR>
map <F8> :.!date<CR>
match ErrorMsg '\s\+$'
nnoremap <Leader>rtw :%s/\s\+$//e<CR>
nnoremap <Leader>df :!git difftool %<CR>
nnoremap <Leader>rs :%s/^ \+//<CR>
set complete-=i
filetype plugin on
filetype indent on
"set omnifunc=syntaxcomplete#Complete
"au FileType c setl ofu=ccomplete#CompleteCpp
autocmd BufWritePre * :%s/\s\+$//e
"
if has('cscope')
    set cscopetag cscopeverbose
    if has('quickfix')
        set cscopequickfix=s-,c-,d-,i-,t-,e-
     endif

    cnoreabbrev csa cs add
    cnoreabbrev csf cs find
    cnoreabbrev csff cs find file
    cnoreabbrev csk cs kill
    cnoreabbrev csr cs reset
    cnoreabbrev css cs show
    cnoreabbrev csh cs help
"    command -nargs=0 Cscope cs add $VIMSRC/src/cscope.out $VIMSRC/src
endif
filetype plugin indent off
syntax off


 " set the runtime path for vundle
 set rtp+=~/.vim/bundle/Vundle.vim
 set rtp+=~/.vim/bundle/ctrlp.vim
"If buffer is open switch to it instead of opening another instance
let g:ctrlp_switch_buffer = 1
"Use find command instead of vim's inbuild commands
let g:ctrlp_user_command = 'find %s -type f' " MacOSX/Linux

"let g:ycm_global_ycm_extra_conf = '~/scrips/.ycm_extra_conf.py'

 " start vundle environment
 call vundle#begin()

 " list of plugins {{{2
 " let Vundle manage Vundle (this is required)
 Plugin 'gmarik/Vundle.vim'
 Plugin 'kien/ctrlp.vim'
 Plugin 'christoomey/vim-tmux-navigator'
 Plugin 'majutsushi/tagbar'
 Plugin 'tpope/vim-fugitive'
 Plugin 'tpope/vim-dispatch'
 Plugin 'Valloric/YouCompleteMe'
 Plugin 'rdnetto/YCM-Generator'
 Plugin 'xolox/vim-misc'
 Plugin 'xolox/vim-notes'
 Plugin 'powerline/powerline'
 Plugin 'mrtazz/DoxygenToolkit.vim'
" to install a plugin add it here and run :PluginInstall.
" to update the plugins run :PluginInstall! or :PluginUpdate
" to delete a plugin remove it here and run :PluginClean
 "

 " YOUR LIST OF PLUGINS GOES HERE LIKE THIS:
"Bundle 'Valloric/YouCompleteMe'

 " add plugins before this
 call vundle#end()

 " now (after vundle finished) it is save to turn filetype plugins on
filetype plugin indent on
syntax on
 "ignore warnings when compiling in vim
" set errorformat^=%-G%f:%l:\ warning:%m
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Start
"Set tmux title to name of present file being edited
" autocmd BufEnter * let &titlestring = ' ' . expand("%:t")
" set title
"end
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""CSCOPE STUFF"""""""""""""""""""""
"map <Leader>f search for C symbol
map <Leader>f <esc>:cscope find s <cword> <CR>:copen<CR>
map <Leader>ft <esc>:cscope find t <cword> <CR>:copen<CR>
"<Leader>fc functions calling this function
map <Leader>fc <esc>:cscope find c <cword> <CR>:copen<CR>
"map <F3> :execute "vimgrep /" . expand("<cword>") . "/j **/*.[ch]" <Bar> cw<CR>
""function called by function under cursor
nnoremap <Leader>fd : cs find d <cword> <CR>:copen<CR>
"function definition of function under cursor
nnoremap <Leader>fg : cs find g <cword><CR>:copen<CR>
"""""""""""""CSCOPE STUFF ENDS""""""""""""""""

nnoremap <Leader>ff :CtrlP<CR>
nnoremap <Leader>b :CtrlPBuffer<CR>

"""""""""'vim fugitive gitstuff"""""""""""""""""""
map  <Leader>gs <esc>:Gstatus <CR>
nnoremap <Leader>gvd :Gvdiff
nnoremap <Leader>gd :Gdiff
nnoremap <Leader>gl :Gitlog<CR>
"""""""""'vim fugitive gitstuff ends """""""""""""""""""

map <F2> :!find `pwd` -name "*.c" -o -name "*.h" -o -name "*.cpp" > cscope.files<CR>:!ctags -R * <CR>:set tag+=tags<CR>:!cscope -Rbq <CR>:cscope add cscope.out<CR>:cs reset<CR>
set tag+=~/projects/labpc_mount/usr/ghs/int1104/tags


