=========================================================================
=                                GIT                                    =
=========================================================================

General:
--------
- git status -> Status of the current Branch
    - git status -uno -> status of only the staged untracked files
- git add <files> -> adds file to be commited to the commit list.
    - git add --all -> to add all the "Tracked" and "Untracked" file to
    commit list.
- git branch -> lists all the local branches in the repo
    - git branch -a -> lists all the branches in the repo, includes
    local and Remote branches
- git commit -> Creates a NEW local commit.
    - git commit --amend -> Amending to another commit.

- How to checkout a remote branch to a local branch
    git checkout --track -b <local_branch> origin/<remote_branch>

- How to ammed commit to previous commit in git?
    1) git rebase -i HEAD~ <previous commit number>
    2) You will get a edit page with all the commit above the previous
    commits and including the commit asked for. Each commit will be added 
    with a text "pick". Make the "pick" to "edit" for which ever commit
    you want to ammend, then save and quit(:wq) the document.
    3) This takes you to the asked commit, you can verify using "git log".
    Note: Since we are rebasing the commit, the changes we are doing stays
    in "no branch" mode.
    4) Afte the changes made to the commit, commit ammend it.
    Then, "git rebase --continue" to the next commit in the pick list
    (document).

    Eg:
        Think we have 5 commits, 5th commit is the latest one and 1st commit
    the oldest commit.
        Now the use case, we have to change the 3rd and the 4th commit. 
    (Change in the sense commit ammend)
        So we give this command,
    git rebase -i HEAD~3
    Note: the privious commit number is 3, becase we want the change the 
    commit 5th - 4th - 3rd commit from the HEAD. Count the number for commits
    from the HEAD, gives ur prevois commit number.

    this command brings us a document like this.

        pick <5th commit message>
        pick <4th Commit message>
        pick <3rd commit message>

    Make the "pick" to "edit", Sice we have to edit only the 4th and 3rd 
    Commits, making "pick" to "edit" to those
        
        pick <5th commit message>
        edit <4th Commit message>
        edit <3rd commit message>

    After this change save and quit the document.
    This gets you to the 3rd commit.
    Make the changes in the 3rd Commit, commit ammend it.
    Then, git rebase --continue
    To go to the 4th commit.
    Make the changes in the 4th commit, commit ammend it.
    Then, git rebase --continue
    To go to the 5th commit.

    Note: While rebase --continue, you might encounter conflicts if you are
    changing the same document in the same line in 2 commits. You might have to
    resolve it, "git add" and then again "git rebase --continue".

- Stashing the Changes
    - git stash --> Used to Stash the Tracked files to a list.
    - git stash pop --> Used to unstash the latest Stash

    - git stash save <name of the stash> --> used to Stash with a Description
    - git stash list -> Lists all the stashed items
    - git stash show stash@{0..n} -> Shows changes in the particular Shash

- How to tag or untag a Commit.
    - Adding the Tag
    git tag -a <TAG_NAME> -m "Message"
    - Deleting the Tag
    get tag -d <TAG_NAME>

- Function History
    git log -L :<Function Name>:<File name>

- Git Bundling
    - Create Bundle:
    git bundle create <Bundle Name> HEAD master

    - Extract Bundle:
    git clone <Bundle Name> <Folder Name>
    cd <Folder Name>

    - Verify the Bundle
    git bundle <Bundle Name>

- Blame
    git blame <file name>
    -> Find the line that caused the bug


Remote:
--------
- Deleting a remote branch:
    git push origin --delete <branchname>
        (or)
    git push origin :<branchname>

- Pushing a new commit to the remote Branch:
    Checkout to the <branch>
    then,
    git push origin <branch>

- Push Tags to the remote server
    - Adding the Tag to the Server
    git push <REMOTE_NAME> --tags
    - Deleting the Tag from the Server
    Firstly remove the local intended tag,if present.
    git push <remote_name> :refs/tags/<TAG_NAME>
    git push --tags

Config:
------
Diff tool:
- To set the Diff tool in git:
    git config --global diff.tool <your diff tool> (example: vimdiff / gvimdiff / meld)
    git config --global difftool.prompt false
- To use Diff tool in git
    git difftool <name of the file> -> tells the difference in the cloud and the local
- Similarly gitgutter tool can be used to make out the difference in runtime

Setting up UserName and EmailAddress: (Holds good for GitHub also Updating the name and Email as in GitHub links to that account)
- git config user.email <your email>
- git config user.name <userName>
If Global Declaration has to be done,
- git config --global user.email <your email>
- git config --global user.name <userName> 

Setting Editor
- git config --global core.editor <EDITOR>
