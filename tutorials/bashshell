Commands:
=========

1) ls: 
    Options:
    --------
    ls -a
    ls -l

2) file:
    Options:
    file *

3) cp:
    cp <src path> <dest path>

4) mv:
    mv <src path> <dest path>

5) tail:
    tail +10 <file name>  --> To output the last 10 lines of the file

6) head:
    head +10 <file Name>   --> To output the first 10 lines of the file 7) Linking file: ln Command 1) ln <ActualFile> <LinkFileName> ---> To create a Hard Link Note: We cannot create a Hard Link for a Directory 
    2) ln -s <ActualFile> <SymbolicFileName> ---> To Crete a symbolic link

8)  find . -name "*vpu*.c"
    Finds the specific pattern file in the Current Directory (.)

9) cscope
    install "cscope" to do the same as ctags, its a differnt tool.
    - cscope -R .

10) vimtutor
    Basic level tutor for vim

11) Disk Usage (du command)
    -h -> human readable format
    -a -> all files

    du -sh .
        gives the disk usage of the current directory

    du -sh *
        gives the disk usage of the files in the current directory

    Trick:
        To find the largrest file in the directory, use the following command
        du -sh * | sort -rh | head -10

12) ack-grep <pattern>
    - Lists all the occurences of the pattern in all the file

13) gsettings set org.gnome.desktop.default-applications.terminal exec 'xterm -fa 'Monospace' -fs 9 -maximized' - in Ubuntu12.04 and beyond
    - Used to change the default terminal in ubuntu

14) Ctrl+l ('clear' - command) -> Clears the console
        'reset' - command clears the consol by clearing all the previous logs
15) Ctrl+u -> Clears the whole line in the shell
16) Ctrl+k -> Clears the the line from the current cursor position to the end
17) Ctrl+w -> Clears the last word typed.
18) Ctrl+a -> To move to the begining of the line
19) Ctrl+e -> To move to the ending of the Line

20) sshfs <host@ipaddr:/remote_dir> <local empty_dir>
    To mount the host dir to the local empty dir.

    usermount -uz <local dir> (or) umount <local dir>
    To unmount

21) File Indexing using updatedb and locate
    sudo updatedb -> to update index file for locate
    (or)
    crontab -e
    -> add "0 5 * * * updatedb" to the file
    
    Now locate command works.
    eg: to locate a file exactly with the same name 
        locate -b '\NAME'

    To update locate, update mlocate package
    -----------------------------------------------------
    Keeping repos updated with cron

    It is good practice to keep your repositories updated. This reduces update time when upgrades are required.
    To update them every day via cron, start by opening your crontab file by doing:

    crontab -e

    Append:
        1 1 * * * apt-get update
    This will only update the repos, leaving the system ready to be updated.


22) Emptying the file without changing the permission of the file
    rm -rf exm.txt && touch exm.txt
    -> will remove the file and create a new file but the new file will not have the same permission as the old one

    cat /dev/null > exm.txt
    -> will empty the file exm.txt and the permissions remains the same.

23) Detect your Linux Distribution
    lsb_release -a  -> Prints distribution-specific information

24) Broadcast msg accross users in the systems
    echo "<Msg>" | wall

25) List of current Logged in Users
    w

26) Removing Old kernels in Debian Systems
    uname -r --> gets the Linux kernel version used now
    dpkg --list | grep linux-image  --> Lists all the kernel images in the systems
    sudo apt-get purge linux-image-<version> --> To remove the kernel version
    sudo update-grub2

27) pushd and popd commands
    pushd -> used to push the directory into the stack
    popd -> used to pop the directory into the stack
    dirs -> used to list of the the dirs in stack

    usage: 
        /usr/ports $ pushd /etc
        /etc $ 
        /etc $ popd
        /usr/ports $

28) To write the commands in vim:
    'Ctrl + x' and then press 'e'
    It opens the editor mentioned in $EDITOR env

29) Crontab Job to execute scripts in regular intervals of time:
    Linux Cron Utility is an effective way to schedule a routine backgrount job,

    Crontab format:
    MIN HOUR DATE MONTH DAY COMMAND

    crontab -l -> to list all the cron jobs
    crontab -u <username> -l -> to list other users cron jobs
    crontab -e -> to edit the crontab file to create a new job

    Eg1: To set a cron job that executes every weekday during work hours:
    00 09-18 * * 1-5 <path of the bash file>

    Eg2: To execute something every 10 mins:
    */10 * * * * <Path to the bash file>

    Note: Dont forget to add a new line after end of the Crontab file
    Hence make a note in the end of the file:
    crontab -e
    
    8 * * * * <some job>

    # Dont forget the newLine!

30) To keep track of all the Config Files in the system:
    Create a git repo and associate to a  Crontab job.

    Git part:
    --------
    git init
    git add <conf files>
    git commit -m "Initial Commit"
    git remote add origin <git server> (Optional if u wanna put it into the server)
    git push -u origin master (Optional)

    Create a Bash file which commits:
    ---------------------------------
    #!/bin/bash
    DDDD = `date +%Y_%m_%d`
    cd /<path>
    git commit -a -m "Auto commit $DDDD"
    git push (Optional)

    Make the bash file executable:
    -----------------------------
    chmod +x <name of the bash file>.sh

    Create a CronTab Job:
    ---------------------

    eg:
    crontab -e
    45 2 1 * * /<path to the bashfile>

31) Putting process to background:
    $ ./bash_script.sh &

    Runs the script in the back ground. But still prints in terminal,
    to privent printing, redirect the output to /dev/null:
    $ ./bash_script.sh > /dev/null &

    Or to print only the error msgs:
    $ ./bash_script.sh &> /dev/null &

32) The 2>&1 redirection
    Using 2>&1 at the end of command is useful way to supress the output and only display errors.

    1 -> stdout
    2 -> stderr

    & -> indicates that what follows is a file discriptor and not a filename. So the construct becomes.
    2>&1
    
33) Disable SSH password authentication

    First, allow log-in by certificate. 
    Copy the contents of your ~/.ssh/id_rsa.pub into the ~/.ssh/authorized_keys file on the server, 
    or run:
    ssh-copy-id [server IP]

    Then, open /etc/ssh/sshd_config and find:
    #PasswordAuthentication yes

    Change it to:
    PasswordAuthentication no

    Restart the SSH server daemon to apply the change:
    sudo service ssh restart

    Now it is only possible to SSH into the server using a key that matches a line in ~/.ssh/authorized_keys.

    Brute force attacks are no longer effective because even a correct password guess will be rejected.

34) Else Statement using || operator:
    
    apt-get update || echo "update failed"

35) nl - command
    Used to put line numbers for the file.
    Usage:
        nl <file_name>

        gives a new file with line number appended to the <file_name>

36) Run previous command as root
    sudo !!

    Usage:
        apt-get install libre

        but the above command needs sudo permission to exacute.
        hence.
        sudo !! -> will execute the previous comand with sudo permission
        In fact -> !! represents the previous command executed.
        hence, sudo !! -> sudo apt-get install

37) Linux User management
    To list all users you can use:
        cut -d: -f1 /etc/passwd

    To add a new user you can use either:
        sudo adduser new_username
        sudo useradd new_username

    To remove/delete a user, first you can use:
        sudo userdel username

    Then you may want to delete the home directory for the deleted user account :
        sudo rm -r /home/username

    To allow user to execute sudo commands:
        sudo adduser username sudo

    To modify the username of a user:
        usermod -l new_username old_username

    To change the password for a user:
        sudo passwd username

    To change the shell for a user:
        sudo chsh username

    To change the details for a user (for example real name):
        sudo chfn username

38) stat - Command
    Use stat commad to list attributes attached with the file ex: permission, size etc.
    usage:
        stat <file_name>

    Ex: Use the stat command to get a file's permissions in octal form:
    stat -c "%a %n" file

    From the man page of stat:
    -c  --format=FORMAT
    %a     Access rights in octal
    %n     File name

    stat -c "%a %A %n" *
    gives all the permissions in Octal, human readable format and file name in the Currenct dir.

39) Making a file unalterable with chattr
    You can make a file unalterable so that it cannot be changed or deleted even by root.
    $ chattr +i /path/to/file

    After that the file is untouchable, it can only be read, and it can't be deleted or altered even by root.
    To update the file, remove the attribute using the -i flag:
    $ chattr -i /path/to/file

40) SSH Connections:
    ssh user@box 'ls -la /tmp' -> Lists all the files in /tmp folder

41) Running a command as another local user
    Syntax: sudo -u <user> <command>

    eg: sudo -u test whoami

42) Giving sudo rights for a user
    sudo usermod -a -G sudo <user_name>

    This command just adds the user to the 'sudo' group.

43) Executing commands with sudo without password

    To sudo without password, you can:
    set the sudoers group to execute commands without being prompted
    set it up only for our user

    Call 'visudo' to start editing the /etc/sudoers file and set to enable the feature for the group.
        %sudo ALL=NOPASSWD: ALL

    Alternatively, to enable it only for yourself:
        YourUserName ALL=(ALL) NOPASSWD: ALL

44) The sticky bit permission

    The sticky bit is a permission bit that protects the files within a directory. If the directory has 
    the sticky bit set, a file can be deleted only by the owner of the file, the owner of the directory,
    or by root.

    This special permission prevents a user from deleting other users' files from public directories such as /tmp:
        $ ll .
        drwxrwxrwt 17 root root 4096 Jul 20 01:09 ./

    The 't' in the end of the permission set means that the sticky bit is active in this folder.

    To set the sticky do:
        $ chmod +t file

    To unset it:
        $ chmod -t file

45) Execute a command without saving it in the history
    Prepending one or more spaces to your command won't be saved in history.

    For example:
        $ echo 1 
        1
        $  echo 2
        2
        $ echo 3
        3
        $ history
          ...
          501  echo 1 
          502  echo 3
          503  history

46) Aliasing ssh connections

    Instead of:
        ssh -i ~/.ssh/custom_id_rsa root@213.133.109.135 -p 31415

    Start by editing this file:
        vim .ssh/config

    Add the following:

        Host lisa
        IdentityFile ~/.ssh/custom_id_rsa
        HostName 213.133.109.135
        User root
        Port 31415

    After that, you can ssh by alias:
        ssh lisa

47) Conditional command execution (&& operator)
    Use the && operator to execute two consecutive commands in order.
    The second command will only be executed if the first one is successful.
    Eg.
        make && make install

48) Breaking out of a terminal when ssh locks

    At times an ssh connection times-out or disconnects and the current terminal locks.
    Normal key combinations are forwarded over the ssh session, therefore no standard 
    breaking keys will work.

    Instead, use the escape sequences. To kill the current session hit: ↵, ~, ..
    More of these escape sequences can be listed with ↵, ~, ?:

    Supported escape sequences:
        ~.  - terminate session
        ~B  - send a BREAK to the remote system
        ~R  - Request rekey (SSH protocol 2 only)
        ~#  - list forwarded connections
        ~?  - this message
        ~~  - send the escape character

49) We can get a list of all the installed packages on Ubuntu using:
        dpkg --get-selections

    List Available packages in RPM based systems:
        yum list available
    
50) Install a debiab package (.deb)
        sudo dpkg -i DEB_PACKAGE

    If dpkg reports an error due to dependency problems, run:
        sudo apt-get install -f

    To remove the package:
        sudo dpkg -r PACKAGE_NAME

51) Removing PPAs
    Using the --remove flag:
        add-apt-repository --remove ppa:name/ppa

    Or, as a safer alternative, you can install ppa-purge:
        apt-get install ppa-purge

    And then remove the PPA while gracefully downgrading packages 
    it provided to packages provided by official repositories:
        ppa-purge ppa_name

    This will remove the PPA but it will not uninstall packages that were 
    installed through it. If you want to remove them, you should use apt:
        apt-get purge package_name

    You can also remove PPAs by deleting the .list files from /etc/apt/sources.list.d 
    directory and then updating the repositories by:
        apt-get update

52) Prevent updating a specific package
    There are several ways of holding back a package (thus preventing it from update).

    Here is how we do it using apt/aptitude.

    Using apt
        You can hold a package using:
            sudo apt-mark hold package_name
        and remove the hold with:
            sudo apt-mark un-hold package_name

    Using aptitude

        You can hold a package using:
            sudo aptitude hold package_name
        and remove the hold with:
            sudo aptitude unhold package_name

53) Setting up password-free authentication
    To set up password-free authentication start by generating a pair of keys:
    ssh-keygen
    
    Then:
    ssh-copy-id -i root@ip_address

    This copies the public key into the authorized_hosts of the other machine. 
    It will ask for the password of the host system.
    
    Now, enter the remote system directly with:
    $ ssh root@ip_address

54) Get real network statistics with slurm
    Slurm is a command line tool that displays real-time data about the specified network interface:
    `-Current RX and TX Speed`
    `-Graph Top RX and TX Speed` 
    `-MBytes Received and Transmitted` 

    You can check this utility directly by using:
        slurm -i <interface_name>

55) Useful ssh client optimizations
    It can alway be useful to make a few optimizations on your ssh client configuration (~/.ssh/config).

    The options below enable us to boost our client performance by using compression 
    (which is helpful with scp over low-bandwidth connections) avoiding dropped connections in certain 
    network environments and multiplexing channels to the same server with a local control file.

    TCPKeepAlive=yes
    ServerAliveInterval=15
    ServerAliveCountMax=6
    Compression=yes
    ControlMaster auto
    ControlPath /tmp/%r@%h:%p
    ControlPersist yes

    For more info on additional options check
        man ssh_config

56) Check the version of a package on a deb based system
    dpkg --list <package>

    The 'ii' means thats installed. Other statuses are shown below:
    Not
    Inst
    Conf-files
    Unpacked
    halF-conf
    Half-inst
    trig-aWait
    Trig-pend

57) Get apt to use a mirror / faster mirror
    apt-get now supports a 'mirror' method that will automatically select a good mirror based 
    on your location.

    The format is (in one line):
        deb
        <repo link>
        <distro>
        <selection1,2..n>

    Putting the following lines one by one would be:
        deb mirror://mirrors.ubuntu.com/mirrors.txt 
        precise 
        main restricted universe multiverse

        deb mirror://mirrors.ubuntu.com/mirrors.txt 
        precise-updates 
        main restricted universe multiverse

        deb mirror://mirrors.ubuntu.com/mirrors.txt 
        precise-backports 
        main restricted universe multiverse

        deb mirror://mirrors.ubuntu.com/mirrors.txt 
        precise-security 
        main restricted universe multiverse

    on the top in your /etc/apt/sources.list file should be all that is needed to make it automatically pick a
    mirror for you based on your geographical location.
    Lucid (10.04), Maverick (10.10), Natty (11.04), And Oneiric (11.10) users can replace precise with the 
    appropriate name.

58) Downgrade a package via apt-get

    You can downgrade a package via apt-get. If you have the version number, or the target release, apt-get 
    allows you to make a selection.

    Use either:
        apt-get install <pkg-name>=<pkg-version>

    Or:
        apt-get -t=<release> install <pkg-name>

    You can list all available versions with:
        apt-cache showpkg <package-name>

    In addition, you can 'hold' a package at the current version and prevent automatic updates using:
        apt-mark hold <package-name>


