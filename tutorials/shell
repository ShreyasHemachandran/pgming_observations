Commands:
=========

1) ls: 
    Options:
    --------
    ls -a
    ls -l

2) file:
    Options:
    file *

3) cp:
    cp <src path> <dest path>

4) mv:
    mv <src path> <dest path>

5) tail:
    tail +10 <file name>  --> To output the last 10 lines of the file

6) head:
    head +10 <file Name>   --> To output the first 10 lines of the file

7) Linking file: ln Command
    1) ln <ActualFile> <LinkFileName> ---> To create a Hard Link
    Note: We cannot create a Hard Link for a Directory

    2) ln -s <ActualFile> <SymbolicFileName> ---> To Crete a symbolic link

8)  find . -name "*vpu*.c"
    Finds the specific pattern file in the Current Directory (.)

9) cscope
    install "cscope" to do the same as ctags, its a differnt tool.
    - cscope -R .

10) vimtutor
    Basic level tutor for vim

11) Disk Usage (du command)
    -h -> human readable format
    -a -> all files

    du -sh .
        gives the disk usage of the current directory

    du -sh *
        gives the disk usage of the files in the current directory

    Trick:
        To find the largrest file in the directory, use the following command
        du -sh * | sort -rh | head -10

12) ack-grep <pattern>
    - Lists all the occurences of the pattern in all the file

13) gsettings set org.gnome.desktop.default-applications.terminal exec 'xterm -fa 'Monospace' -fs 9 -maximized' - in Ubuntu12.04 and beyond
    - Used to change the default terminal in ubuntu

14) Ctrl+l -> Clears the console
15) Ctrl+u -> Clears the whole line in the shell
16) Ctrl+k -> Clears the the line from the current cursor position to the end
17) Ctrl+w -> Clears the last word typed.
18) Ctrl+a -> To move to the begining of the line
19) Ctrl+e -> To move to the ending of the Line

20) sshfs <host@ipaddr:/remote_dir> <local empty_dir>
    To mount the host dir to the local empty dir.

    usermount -uz <local dir> (or) umount <local dir>
    To unmount

21) File Indexing using updatedb and locate
    sudo updatedb -> to update index file for locate
    (or)
    crontab -e
    -> add "0 5 * * * updatedb" to the file
    
    Now locate command works.
    eg: to locate a file exactly with the same name 
        locate -b '\NAME'

    To update locate, update mlocate package

22) Emptying the file without changing the permission of the file
    rm -rf exm.txt && touch exm.txt
    -> will remove the file and create a new file but the new file will not have the same permission as the old one

    cat /dev/null > exm.txt
    -> will empty the file exm.txt and the permissions remains the same.

23) Detect your Linux Distribution
    lsb_release -a  -> Prints distribution-specific information

24) Broadcast msg accross users in the systems
    echo "<Msg>" | wall

25) List of current Logged in Users
    w

26) Removing Old kernels in Debian Systems
    uname -r --> gets the Linux kernel version used now
    dpkg --list | grep linux-image  --> Lists all the kernel images in the systems
    sudo apt-get purge linux-image-<version> --> To remove the kernel version
    sudo update-grub2

27) pushd and popd commands
    pushd -> used to push the directory into the stack
    popd -> used to pop the directory into the stack
    dirs -> used to list of the the dirs in stack

    usage: 
        /usr/ports $ pushd /etc
        /etc $ 
        /etc $ popd
        /usr/ports $

28) To write the commands in vim:
    'Ctrl + x' and then press 'e'
    It opens the editor mentioned in $EDITOR env

29) Crontab Job to execute scripts in regular intervals of time:
    Linux Cron Utility is an effective way to schedule a routine backgrount job,

    Crontab format:
    MIN HOUR DATE MONTH DAY COMMAND

    crontab -l -> to list all the cron jobs
    crontab -u <username> -l -> to list other users cron jobs
    crontab -e -> to edit the crontab file to create a new job

    Eg1: To set a cron job that executes every weekday during work hours:
    00 09-18 * * 1-5 <path of the bash file>

    Eg2: To execute something every 10 mins:
    */10 * * * * <Path to the bash file>

    Note: Dont forget to add a new line after end of the Crontab file
    Hence make a note in the end of the file:
    crontab -e
    
    8 * * * * <some job>

    # Dont forget the newLine!

30) To keep track of all the Config Files in the system:
    Create a git repo and associate to a  Crontab job.

    Git part:
    --------
    git init
    git add <conf files>
    git commit -m "Initial Commit"
    git remote add origin <git server> (Optional if u wanna put it into the server)
    git push -u origin master (Optional)

    Create a Bash file which commits:
    ---------------------------------
    #!/bin/bash
    DDDD = `date +%Y_%m_%d`
    cd /<path>
    git commit -a -m "Auto commit $DDDD"
    git push (Optional)

    Make the bash file executable:
    -----------------------------
    chmod +x <name of the bash file>.sh

    Create a CronTab Job:
    ---------------------

    eg:
    crontab -e
    45 2 1 * * /<path to the bashfile>

31) Putting process to background:
    $ ./bash_script.sh &

    Runs the script in the back ground. But still prints in terminal,
    to privent printing, redirect the output to /dev/null:
    $ ./bash_script.sh > /dev/null &

    Or to print only the error msgs:
    $ ./bash_script.sh &> /dev/null &

32) The 2>&1 redirection
    Using 2>&1 at the end of command is useful way to supress the output and only display errors.

    1 -> stdout
    2 -> stderr

    & -> indicates that what follows is a file discriptor and not a filename. So the construct becomes.
    2>&1
    
33) Disable SSH password authentication

    First, allow log-in by certificate. 
    Copy the contents of your ~/.ssh/id_rsa.pub into the ~/.ssh/authorized_keys file on the server, 
    or run:
    ssh-copy-id [server IP]

    Then, open /etc/ssh/sshd_config and find:
    #PasswordAuthentication yes

    Change it to:
    PasswordAuthentication no

    Restart the SSH server daemon to apply the change:
    sudo service ssh restart

    Now it is only possible to SSH into the server using a key that matches a line in ~/.ssh/authorized_keys.

    Brute force attacks are no longer effective because even a correct password guess will be rejected.

34) Else Statement using || operator:
    
    apt-get update || echo "update failed"

35) nl - command
    Used to put line numbers for the file.
    Usage:
        nl <file_name>

        gives a new file with line number appended to the <file_name>

36) Run previous command as root
    sudo !!

    Usage:
        apt-get install libre

        but the above command needs sudo permission to exacute.
        hence.
        sudo !! -> will execute the previous comand with sudo permission
        In fact -> !! represents the previous command executed.
        hence, sudo !! -> sudo apt-get install

37) Linux User management
    To list all users you can use:
        cut -d: -f1 /etc/passwd

    To add a new user you can use either:
        sudo adduser new_username
        sudo useradd new_username

    To remove/delete a user, first you can use:
        sudo userdel username

    Then you may want to delete the home directory for the deleted user account :
        sudo rm -r /home/username

    To allow user to execute sudo commands:
        sudo adduser username sudo

    To modify the username of a user:
        usermod -l new_username old_username

    To change the password for a user:
        sudo passwd username

    To change the shell for a user:
        sudo chsh username

    To change the details for a user (for example real name):
        sudo chfn username

38) stat - Command
    Use stat commad to list attributes attached with the file ex: permission, size etc.
    usage:
        stat <file_name>

    Ex: Use the stat command to get a file's permissions in octal form:
    stat -c "%a %n" file

    From the man page of stat:
    -c  --format=FORMAT
    %a     Access rights in octal
    %n     File name

    stat -c "%a %A %n" *
    gives all the permissions in Octal, human readable format and file name in the Currenct dir.

39) Making a file unalterable with chattr
    You can make a file unalterable so that it cannot be changed or deleted even by root.
    $ chattr +i /path/to/file

    After that the file is untouchable, it can only be read, and it can't be deleted or altered even by root.
    To update the file, remove the attribute using the -i flag:
    $ chattr -i /path/to/file

40) SSH Connections:
    ssh user@box 'ls -la /tmp' -> Lists all the files in /tmp folder

